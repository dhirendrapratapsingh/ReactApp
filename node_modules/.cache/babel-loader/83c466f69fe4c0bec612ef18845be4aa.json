{"ast":null,"code":"import _classCallCheck from \"/home/wishbook/react_js/ReactApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/wishbook/react_js/ReactApp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/wishbook/react_js/ReactApp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/wishbook/react_js/ReactApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/wishbook/react_js/ReactApp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/wishbook/react_js/ReactApp/src/components/PostList.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport sunflower from '../sunflower.png';\n/* .. to go one step back */\n\n/* Since Placeholder isOnline REST API for Testing and Prototyping \nit doesnt change the data on the server but it appears like*/\n\nvar PostList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostList, _Component);\n\n  function PostList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PostList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PostList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      posts: []\n    };\n    return _this;\n  }\n\n  _createClass(PostList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('https://jsonplaceholder.typicode.com/posts/').then(function (res) {\n        console.log(res);\n\n        _this2.setState({\n          posts: res.data.slice(0, 10)\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var posts = this.state.posts;\n      var postList = posts.length ? posts.map(function (post) {\n        return React.createElement(\"div\", {\n          className: \"post card\",\n          key: post.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: sunflower,\n          alt: \"A Pokeball\",\n          className: \"App-logo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"card-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: '/PostList/' + post.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"card-title red-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, post.title)), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, post.body)));\n      }) :\n      /* by the time post gets loaded show this */\n      React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"No posts to show its Loading\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"PostList\"), postList));\n    }\n  }]);\n\n  return PostList;\n}(Component);\n\nexport default PostList;","map":{"version":3,"sources":["/home/wishbook/react_js/ReactApp/src/components/PostList.js"],"names":["React","Component","axios","Link","sunflower","PostList","state","posts","get","then","res","console","log","setState","data","slice","postList","length","map","post","id","title","body"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAAyC;;AAGzC;;;IAGMC,Q;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,KAAK,EAAE;AADH,K;;;;;;wCAGY;AAAA;;AAChBL,MAAAA,KAAK,CAACM,GAAN,CAAU,6CAAV,EACKC,IADL,CACU,UAAAC,GAAG,EAAI;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,QAAA,MAAI,CAACG,QAAL,CAAc;AACVN,UAAAA,KAAK,EAAEG,GAAG,CAACI,IAAJ,CAASC,KAAT,CAAe,CAAf,EAAkB,EAAlB;AADG,SAAd;AAGH,OANL;AAOH;;;6BACQ;AAAA,UACGR,KADH,GACa,KAAKD,KADlB,CACGC,KADH;AAEL,UAAMS,QAAQ,GACdT,KAAK,CAACU,MAAN,GAEIV,KAAK,CAACW,GAAN,CAAU,UAAAC,IAAI,EAAI;AACd,eACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAA2B,UAAA,GAAG,EAAEA,IAAI,CAACC,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,GAAG,EAAEhB,SAAV;AAAqB,UAAA,GAAG,EAAC,YAAzB;AAAsC,UAAA,SAAS,EAAC,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAE,eAAee,IAAI,CAACC,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuCD,IAAI,CAACE,KAA5C,CADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIF,IAAI,CAACG,IAAT,CAJJ,CAFJ,CADJ;AAWH,OAZD,CAFJ;AAgBI;AACA;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAlBJ;AAqBA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEKN,QAFL,CADJ,CADJ;AAQH;;;;EA7CkBf,S;;AAgDvB,eAAeI,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport sunflower from '../sunflower.png' /* .. to go one step back */\n\n\n/* Since Placeholder isOnline REST API for Testing and Prototyping \nit doesnt change the data on the server but it appears like*/\n\nclass PostList extends Component\n{\n    state = {\n        posts: []\n    }\n    componentDidMount() {\n        axios.get('https://jsonplaceholder.typicode.com/posts/')\n            .then(res => {\n                console.log(res);\n                this.setState({\n                    posts: res.data.slice(0, 10)\n                });\n            })\n    }\n    render() {\n        const { posts } = this.state\n        const postList =\n        posts.length ?\n        (\n            posts.map(post => {\n                return (\n                    <div className=\"post card\" key={post.id}>\n                        <img src={sunflower} alt=\"A Pokeball\" className=\"App-logo\"  />\n                        <div className=\"card-content\">\n                            <Link to={'/PostList/' + post.id}>\n                                <span className=\"card-title red-text\">{post.title}</span>\n                            </Link>\n                            <p>{post.body}</p>\n                        </div>\n                    </div>\n                )\n            })\n        ) : \n        (   /* by the time post gets loaded show this */\n            <div className=\"center\">No posts to show its Loading</div> \n        );\n\n        return (\n            <div>\n                <div className=\"container\">\n                    <h4 className=\"center\">PostList</h4>\n                    {postList}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PostList"]},"metadata":{},"sourceType":"module"}