{"ast":null,"code":"import _classCallCheck from \"/home/wishbook/react_js/ReactApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/wishbook/react_js/ReactApp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/wishbook/react_js/ReactApp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/wishbook/react_js/ReactApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/wishbook/react_js/ReactApp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport auth0 from 'auth0-js';\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginForm, _Component);\n\n  function LoginForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.auth0 = new auth0.WebAuth({\n      domain: 'dhirensingh.auth0.com',\n      clientID: '27qWdjwLT4NYlP5m7RiYF65T1wGztxFX',\n      redirectUri: 'http://localhost:3000/home',\n      responseType: 'token id_token',\n      scope: 'openid'\n    });\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('login called');\n      this.auth0.authorize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null\n      /* {<form>\n          <label>\n              User Name:\n          <input type=\"text\" name=\"name\" />\n          </label>\n          <label>\n              Password:\n          <input type=\"text\" name=\"pass\" />\n          </label>\n          <input type=\"button\" value=\"submit\" onClick={this.clickHandler} />\n      </form>} */\n      ;\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nexport default LoginForm;","map":{"version":3,"sources":["/home/wishbook/react_js/ReactApp/src/components/LoginForm.js"],"names":["React","Component","auth0","LoginForm","WebAuth","domain","clientID","redirectUri","responseType","scope","console","log","authorize"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,UAAlB;;IAGMC,S;;;;;;;;;;;;;;;;;UAMFD,K,GAAQ,IAAIA,KAAK,CAACE,OAAV,CAAkB;AACtBC,MAAAA,MAAM,EAAE,uBADc;AAEtBC,MAAAA,QAAQ,EAAE,kCAFY;AAGtBC,MAAAA,WAAW,EAAE,4BAHS;AAItBC,MAAAA,YAAY,EAAE,gBAJQ;AAKtBC,MAAAA,KAAK,EAAE;AALe,KAAlB,C;;;;;;wCAUR;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,WAAKT,KAAL,CAAWU,SAAX;AACH;;;6BACQ;AACL,aAAQ;AACA;;;;;;;;;;;AADR;AAaH;;;;EAlCmBX,S;;AAqCxB,eAAeE,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport auth0 from 'auth0-js';\n\n\nclass LoginForm extends Component\n{\n\n/* I have used Auth0 for the Login feature in my App to Auth0 provides authentication and authorization as a service. We are here to give developers and companies the building\n blocks they need to secure their applications without having to become security experts. ... Based on your app's technology,\n choose one of our SDKs (or call our API), and hook it up to your app. */\n    auth0 = new auth0.WebAuth({\n        domain: 'dhirensingh.auth0.com',\n        clientID: '27qWdjwLT4NYlP5m7RiYF65T1wGztxFX',\n        redirectUri: 'http://localhost:3000/home',\n        responseType: 'token id_token',\n        scope: 'openid'\n    });\n\n    \n    componentDidMount()\n    {\n        console.log('login called');  \n        this.auth0.authorize();\n    }\n    render() {\n        return (null\n                /* {<form>\n                    <label>\n                        User Name:\n                    <input type=\"text\" name=\"name\" />\n                    </label>\n                    <label>\n                        Password:\n                    <input type=\"text\" name=\"pass\" />\n                    </label>\n                    <input type=\"button\" value=\"submit\" onClick={this.clickHandler} />\n                </form>} */\n        );\n    }\n}\n\nexport default LoginForm;\n\n"]},"metadata":{},"sourceType":"module"}