{"ast":null,"code":"import _objectSpread from \"/home/wishbook/react_js/Neetable/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n// a central store of data which any component can subscribe to by connecting\nimport { SET_CARD_LIST } from \"../actions/types\";\nvar intialState = {\n  // all initial values of redux state can be initiallized here\n  CardItems: []\n};\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action);\n\n  if (action.type === 'GET_CARDS') {\n    return _objectSpread({}, state, {\n      CardItems: action.payload.slice(0, 20)\n    });\n  } else if (action.type === 'ADD_CARD') {\n    var copy = state.CardItems;\n    copy.unshift(action.payload);\n    return _objectSpread({}, state, {\n      allowLocalStateManipulation: true,\n      CardItems: copy\n    });\n  } else if (action.type === 'DELETE_CARD') {\n    return _objectSpread({}, state, {\n      allowLocalStateManipulation: true,\n      CardItems: state.CardItems.filter(function (item) {\n        return item.id !== action.payload;\n      })\n    });\n  } else if (action.type === 'UPDATE_CARD') {\n    var copy = state.CardItems;\n    state.CardItems.forEach(function (item) {\n      if (item.id == action.payload.id) {\n        item = action.payload;\n      }\n    });\n    return _objectSpread({}, state, {\n      allowLocalStateManipulation: true,\n      CardItems: state.CardItems.filter(function (item) {\n        return item.id !== action.payload;\n      })\n    });\n  } else if (action.type === 'ALLOW_MANIPULATION') {\n    return _objectSpread({}, state, {\n      allowLocalStateManipulation: action.payload\n    });\n  } else if (action.type === SET_CARD_LIST) {\n    return _objectSpread({}, state, {\n      CardItems: action.payload\n    });\n  } else {\n    return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/home/wishbook/react_js/Neetable/src/reducers/rootReducer.js"],"names":["SET_CARD_LIST","intialState","CardItems","rootReducer","state","action","console","log","type","payload","slice","copy","unshift","allowLocalStateManipulation","filter","item","id","forEach"],"mappings":";AAAA;AACA,SAASA,aAAT,QAA8B,kBAA9B;AAEA,IAAMC,WAAW,GAAG;AAAI;AACpBC,EAAAA,SAAS,EAAG;AADI,CAApB;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GACpB;AAAA,MADqBC,KACrB,uEAD6BH,WAC7B;AAAA,MAD0CI,MAC1C;AACIC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AAGA,MAAIA,MAAM,CAACG,IAAP,KAAgB,WAApB,EACA;AACI,6BACOJ,KADP;AAEIF,MAAAA,SAAS,EAAEG,MAAM,CAACI,OAAP,CAAeC,KAAf,CAAqB,CAArB,EAAwB,EAAxB;AAFf;AAKH,GAPD,MAQK,IAAIL,MAAM,CAACG,IAAP,KAAgB,UAApB,EAAgC;AAEjC,QAAIG,IAAI,GAAGP,KAAK,CAACF,SAAjB;AACAS,IAAAA,IAAI,CAACC,OAAL,CAAaP,MAAM,CAACI,OAApB;AAEA,6BACOL,KADP;AAEIS,MAAAA,2BAA2B,EAAE,IAFjC;AAGIX,MAAAA,SAAS,EAAES;AAHf;AAMH,GAXI,MAYA,IAAIN,MAAM,CAACG,IAAP,KAAgB,aAApB,EACL;AAEI,6BACOJ,KADP;AAEIS,MAAAA,2BAA2B,EAAG,IAFlC;AAGIX,MAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBY,MAAhB,CAAuB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,KAAYX,MAAM,CAACI,OAAvB;AAAA,OAA3B;AAHf;AAMH,GATI,MAUA,IAAIJ,MAAM,CAACG,IAAP,KAAgB,aAApB,EAAmC;AAEpC,QAAIG,IAAI,GAAGP,KAAK,CAACF,SAAjB;AACAE,IAAAA,KAAK,CAACF,SAAN,CAAgBe,OAAhB,CAAwB,UAACF,IAAD,EACxB;AACI,UAAIA,IAAI,CAACC,EAAL,IAAWX,MAAM,CAACI,OAAP,CAAeO,EAA9B,EAAkC;AAC9BD,QAAAA,IAAI,GAAGV,MAAM,CAACI,OAAd;AAEH;AAEJ,KAPD;AASA,6BACOL,KADP;AAEIS,MAAAA,2BAA2B,EAAE,IAFjC;AAGIX,MAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBY,MAAhB,CAAuB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,KAAYX,MAAM,CAACI,OAAvB;AAAA,OAA3B;AAHf;AAMH,GAlBI,MAmBA,IAAIJ,MAAM,CAACG,IAAP,KAAgB,oBAApB,EACL;AACI,6BACOJ,KADP;AAEIS,MAAAA,2BAA2B,EAAER,MAAM,CAACI;AAFxC;AAIH,GANI,MAOA,IAAIJ,MAAM,CAACG,IAAP,KAAgBR,aAApB,EAAmC;AACpC,6BACOI,KADP;AAEIF,MAAAA,SAAS,EAAEG,MAAM,CAACI;AAFtB;AAIH,GALI,MAOL;AACI,WAAOL,KAAP;AACH;AAEJ,CAxED;;AA0EA,eAAeD,WAAf","sourcesContent":["// a central store of data which any component can subscribe to by connecting\nimport { SET_CARD_LIST } from \"../actions/types\";\n\nconst intialState = {   // all initial values of redux state can be initiallized here\n    CardItems : []\n} \n\n\nconst rootReducer = (state = intialState ,action) =>\n{\n    console.log(action);\n    \n    \n    if (action.type === 'GET_CARDS')\n    {\n        return {\n            ...state,\n            CardItems: action.payload.slice(0, 20)\n        };\n        \n    }\n    else if (action.type === 'ADD_CARD') {\n\n        var copy = state.CardItems;\n        copy.unshift(action.payload)\n\n        return {\n            ...state,\n            allowLocalStateManipulation: true,\n            CardItems: copy\n        };\n\n    }\n    else if (action.type === 'DELETE_CARD') \n    {\n        \n        return {\n            ...state,\n            allowLocalStateManipulation : true,\n            CardItems: state.CardItems.filter(item => item.id !== action.payload)\n        };\n          \n    }\n    else if (action.type === 'UPDATE_CARD') {\n\n        var copy = state.CardItems;\n        state.CardItems.forEach((item)=>\n        {\n            if (item.id == action.payload.id) {\n                item = action.payload;\n                \n            }\n\n        });\n\n        return {\n            ...state,\n            allowLocalStateManipulation: true,\n            CardItems: state.CardItems.filter(item => item.id !== action.payload)\n        };\n\n    }\n    else if (action.type === 'ALLOW_MANIPULATION')\n    {\n        return {\n            ...state,\n            allowLocalStateManipulation: action.payload,\n        };\n    }\n    else if (action.type === SET_CARD_LIST) {\n        return {\n            ...state,\n            CardItems: action.payload,\n        };\n    }\n    else\n    {\n        return state;\n    }\n     \n}\n\nexport default rootReducer ;"]},"metadata":{},"sourceType":"module"}