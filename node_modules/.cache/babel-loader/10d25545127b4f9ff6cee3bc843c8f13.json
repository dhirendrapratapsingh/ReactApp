{"ast":null,"code":"import _objectSpread from \"/home/wishbook/react_js/Neetable/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n// a central store of data which any component can subscribe to by connecting\nimport { SET_CARD_LIST } from \"../actions/types\";\nvar intialState = {\n  // all initial values of redux state can be initiallized here\n  CardItems: [],\n  CardItemsCopy: [],\n  // uded for reset\n  AllCardItems: [],\n  paginationLimit: 9\n};\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action);\n\n  if (action.type === 'GET_CARDS') {\n    return _objectSpread({}, state, {\n      CardItems: action.payload.slice(0, 21),\n      AllCardItems: action.payload,\n      CardItemsCopy: action.payload.slice(0, 21)\n    });\n  } else if (action.type === 'ADD_CARD') {\n    var copy = state.CardItems;\n    copy.unshift(action.payload);\n    return _objectSpread({}, state, {\n      allowLocalStateManipulation: true,\n      CardItems: copy,\n      CardItemsCopy: copy\n    });\n  } else if (action.type === 'DELETE_CARD') {\n    return _objectSpread({}, state, {\n      allowLocalStateManipulation: true,\n      CardItems: state.CardItems.filter(function (item) {\n        return item.id !== action.payload;\n      }),\n      CardItemsCopy: state.CardItems.filter(function (item) {\n        return item.id !== action.payload;\n      })\n    });\n  } else if (action.type === 'UPDATE_CARD') {\n    console.log(action.payload);\n    var updatedList = state.CardItems.map(function (item) {\n      if (item.id === action.payload.id) {\n        console.log('matched');\n        item = action.payload;\n      }\n\n      return item;\n    });\n    console.log(updatedList);\n    return _objectSpread({}, state, {\n      allowLocalStateManipulation: true,\n      CardItems: updatedList\n    });\n  } else if (action.type === 'ALLOW_MANIPULATION') {\n    return _objectSpread({}, state, {\n      allowLocalStateManipulation: action.payload\n    });\n  }\n\n  if (action.type === 'GET_MORE_CARDS') {\n    return _objectSpread({}, state, {\n      CardItems: state.CardItems.concat(state.AllCardItems.slice(action.payload, action.payload + state.paginationLimit)),\n      allowLocalStateManipulation: true\n    });\n  } else if (action.type === SET_CARD_LIST) {\n    return _objectSpread({}, state, {\n      CardItems: action.payload\n    });\n  } else {\n    return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/home/wishbook/react_js/Neetable/src/reducers/rootReducer.js"],"names":["SET_CARD_LIST","intialState","CardItems","CardItemsCopy","AllCardItems","paginationLimit","rootReducer","state","action","console","log","type","payload","slice","copy","unshift","allowLocalStateManipulation","filter","item","id","updatedList","map","concat"],"mappings":"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","sourcesContent":["// a central store of data which any component can subscribe to by connecting\nimport { SET_CARD_LIST } from \"../actions/types\";\n\nconst intialState = {   // all initial values of redux state can be initiallized here\n    CardItems : [],\n    CardItemsCopy : [], // uded for reset\n    AllCardItems: [],\n    paginationLimit : 9\n} \n\n\nconst rootReducer = (state = intialState ,action) =>\n{\n    console.log(action);\n    \n    \n    if (action.type === 'GET_CARDS')\n    {\n        return {\n            ...state,\n            CardItems: action.payload.slice(0, 21),\n            AllCardItems: action.payload,\n            CardItemsCopy: action.payload.slice(0, 21)\n        };\n        \n    }\n    else if (action.type === 'ADD_CARD') {\n\n        var copy = state.CardItems;\n        copy.unshift(action.payload)\n\n        return {\n            ...state,\n            allowLocalStateManipulation: true,\n            CardItems: copy,\n            CardItemsCopy: copy\n\n        };\n\n    }\n    else if (action.type === 'DELETE_CARD') \n    {\n        \n        return {\n            ...state,\n            allowLocalStateManipulation : true,\n            CardItems: state.CardItems.filter(item => item.id !== action.payload),\n            CardItemsCopy: state.CardItems.filter(item => item.id !== action.payload),\n        };\n          \n    }\n    else if (action.type === 'UPDATE_CARD') {\n\n        console.log(action.payload);\n        \n\n        \n        var updatedList = state.CardItems.map((item)=>\n        {\n            if (item.id === action.payload.id) {\n                console.log('matched');\n                item = action.payload;\n            }\n            return item;\n\n        });\n        console.log(updatedList);\n        \n\n        return {\n            ...state,\n            allowLocalStateManipulation: true,\n            CardItems: updatedList\n        };\n\n    }\n    else if (action.type === 'ALLOW_MANIPULATION')\n    {\n        return {\n            ...state,\n            allowLocalStateManipulation: action.payload,\n        };\n    }\n    if (action.type === 'GET_MORE_CARDS') {\n        return {\n            ...state,\n            CardItems: state.CardItems.concat(state.AllCardItems.slice(action.payload, action.payload + state.paginationLimit)),\n            allowLocalStateManipulation: true\n        };\n\n    }\n    else if (action.type === SET_CARD_LIST) {\n        return {\n            ...state,\n            CardItems: action.payload,\n        };\n    }\n    else\n    {\n        return state;\n    }\n     \n}\n\nexport default rootReducer ;"]},"metadata":{},"sourceType":"module"}